from luckyticket_bot import temp, keygen
from aiogram.types import InlineKeyboardButton, KeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
import db

replic_403 = '–û—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ'
replic_admin_reg_success = '–í—ã –±—ã–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
replic_admin_cannot_delete_self = '–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–µ–±—è'
replic_admin_panel = '–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å'
replic_edit_tour_name = '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—É—Ä–∞'
replic_edit_tour_description = '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç—É—Ä–∞'
replic_edit_tour_duration = '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—É—Ä–∞'
replic_edit_tour_important_text = '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—É—Ä–µ'
replic_edit_tour_image = '–ü—Ä–∏—à–ª–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'
replic_edit_day_info = '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–Ω—è'
replic_edit_dep_bus = '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∞–≤—Ç–æ–±—É—Å–∞'
replic_edit_dep_occupied_seats = '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–Ω—è—Ç—ã—Ö –º–µ—Å—Ç'
replic_edit_dep_seats = '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–µ—Å—Ç'
replic_edit_dep_arrival_time = '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –¥–∞—Ç—É –ø—Ä–∏–±—ã—Ç–∏—è'
replic_edit_dep_departure_time = '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –¥–∞—Ç—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è'
replic_edit_dep_price = '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Ü–µ–Ω—É –¥–ª—è –≤–∞—Ä–∏–∞—Ü–∏–∏'
replic_edit_dep_variation = '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—Ä–∏–∞—Ü–∏–∏'
replic_edit_dep_int_error = '–í–≤–µ–¥–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º'
replic_edit_dep_occupied_seats_error = '–ß–∏—Å–ª–æ –∑–∞–Ω—è—Ç—ã—Ö –º–µ—Å—Ç –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å –æ–±—â–µ–µ —á–∏—Å–ª–æ –º–µ—Å—Ç'
replic_edit_dep_seats_error = '–û–±—â–µ–µ —á–∏—Å–ª–æ –º–µ—Å—Ç –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ –∑–∞–Ω—è—Ç–æ–≥–æ —á–∏—Å–ª–∞ –º–µ—Å—Ç'

def replic_del_tour_confirmation(tour_id):
    text = '–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ç—É—Ä?'
    markup = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='‚ùå –£–¥–∞–ª–∏—Ç—å', callback_data=f'admin.deltconfirm.{tour_id}')],
                                                   [InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data=f'admin.tour.{tour_id}')]])
    return text, markup

def replic_reg_new_admin_keygen():
    temp.reg_admin_key = f'reg_admin_' + keygen.generate_password(12)
    return f'–°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:\nhttps://t.me/lucky_ticket_bot?start={temp.reg_admin_key}'


async def replic_menu_admins():
    admins = await db.tg_admins.get_admins_list()
    keyboard = []
    for i in admins:
        keyboard.append([InlineKeyboardButton(text=i['name'], callback_data=f"admin.del.{i['id']}")])
    keyboard.append([InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='admin.main.main')])
    markup = InlineKeyboardMarkup(inline_keyboard=keyboard)
    text = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏ (–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å)'
    return text, markup

async def replic_menu_tours():
    tours = await db.tours.get_tours_list()
    keyboard = []
    for i in tours:
        keyboard.append([InlineKeyboardButton(text=i["name"], callback_data=f"admin.tour.{i['id']}")])
    keyboard.append([InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å', callback_data=f'admin.add.tour')])
    keyboard.append([InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='admin.main.main')])
    markup = InlineKeyboardMarkup(inline_keyboard=keyboard)
    text = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—É—Ä–∞–º–∏'
    return text, markup

async def replic_menu_maintours():
    tours = await db.tours.get_tours_list()
    keyboard = []
    for i in tours:
        print(i)
        if i['main_card'] is None or i["main_card"] == 0:
            keyboard.append([InlineKeyboardButton(text=f'üî¥ {i["name"]}', callback_data=f"admin.updatemain.{i['id']}")])
        else:
            keyboard.append([InlineKeyboardButton(text=f'üü¢ {i["name"]}', callback_data=f"admin.updatemain.{i['id']}")])
    keyboard.append([InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='admin.main.main')])
    markup = InlineKeyboardMarkup(inline_keyboard=keyboard)
    text = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–ª–∞–≤–Ω—ã–º–∏ —Ç—É—Ä–∞–º–∏'
    return text, markup

async def replic_menu_edit_tour(tour_id):
    tour_data = await db.tours.get_tour_info(tour_id)
    text = f'{tour_data["name"]}\n{tour_data["description"]}\n–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {tour_data["duration"]}'
    keyboard = []
    keyboard.append([InlineKeyboardButton(text='–ù–∞–∑–≤–∞–Ω–∏–µ', callback_data=f'admin.etourname.{tour_id}')])
    keyboard.append([InlineKeyboardButton(text='–û–ø–∏—Å–∞–Ω–∏–µ', callback_data=f'admin.etourdesc.{tour_id}')])
    keyboard.append([InlineKeyboardButton(text='–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', callback_data=f'admin.etoirdur.{tour_id}')])
    keyboard.append([InlineKeyboardButton(text='–û–ø–∏—Å–∞–Ω–∏–µ –¥–Ω–µ–π', callback_data=f'admin.etourdays.{tour_id}')])
    keyboard.append([InlineKeyboardButton(text='–í–∞–∂–Ω—ã–π —Ç–µ–∫—Å—Ç', callback_data=f'admin.etourimp.{tour_id}')])
    keyboard.append([InlineKeyboardButton(text='üñºÔ∏è –ö–∞—Ä—Ç–æ—á–∫–∞', callback_data=f'admin.etourcard.{tour_id}')])
    keyboard.append([InlineKeyboardButton(text='üñºÔ∏è –§–æ–Ω', callback_data=f'admin.etourback.{tour_id}')])
    for i in tour_data["info_table"]:
        if i["departure_time"] == None:
            inline_text = '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ'
        else:
            inline_text = i["departure_time"]
        keyboard.append([InlineKeyboardButton(text=inline_text, callback_data=f'admin.dep:{tour_id}.{i["id"]}')])
    keyboard.append([InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å', callback_data=f'admin.adddep.{tour_id}')])
    keyboard.append([InlineKeyboardButton(text='‚ùå –£–¥–∞–ª–∏—Ç—å —Ç—É—Ä', callback_data=f'admin.deltour.{tour_id}')])
    keyboard.append([InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data=f'admin.menu.tours')])
    markup = InlineKeyboardMarkup(inline_keyboard=keyboard)
    return text, markup

async def replic_menu_editor_days_info(tour_id):
    days_info = await db.tours.get_days_info(tour_id)
    keyboard = []
    for i in range(len(days_info)):
        keyboard.append([InlineKeyboardButton(text=str(i+1), callback_data=f'admin.etd:{tour_id}.{i}')])
    keyboard.append([InlineKeyboardButton(text='‚ùå', callback_data=f'admin.etdel:{tour_id}.{len(days_info) - 1}')])
    keyboard.append([InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å', callback_data=f'admin.adayinfo.{tour_id}')])
    keyboard.append([InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data=f'admin.tour.{tour_id}')])
    markup = InlineKeyboardMarkup(inline_keyboard=keyboard)
    text = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–Ω–µ–π —Ç—É—Ä–∞'
    return text, markup

async def replic_menu_editor_departure(tour_id, departure_id):
    data = await db.info_table.get_item_info(departure_id)
    keyboard = []
    print(data)
    print(data['prices'])
    for i in range(len(data["prices"])):
        print(data["prices"][i])
        keyboard.append([InlineKeyboardButton(text=data["prices"][i]["variation"], callback_data=f'admin.edepv:{tour_id}.{departure_id}:{i}'),
                         InlineKeyboardButton(text=str(data["prices"][i]["price"]), callback_data=f'admin.edepp:{tour_id}.{departure_id}:{i}')])
    keyboard.append([InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤–∞—Ä–∏–∞—Ü–∏—é', callback_data=f'admin.edepav:{tour_id}.{departure_id}')])
    keyboard.append([InlineKeyboardButton(text='‚ûñ –£–±—Ä–∞—Ç—å –≤–∞—Ä–∏–∞—Ü–∏—é', callback_data=f'admin.edepdv:{tour_id}.{departure_id}')])
    keyboard.append([InlineKeyboardButton(text='–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è', callback_data=f'admin.edeptd:{tour_id}.{departure_id}')])
    keyboard.append([InlineKeyboardButton(text='–î–∞—Ç–∞ –ø—Ä–∏–±—ã—Ç–∏—è', callback_data=f'admin.edepta:{tour_id}.{departure_id}')])
    keyboard.append([InlineKeyboardButton(text='–í—Å–µ–≥–æ –º–µ—Å—Ç', callback_data=f'admin.edeps:{tour_id}.{departure_id}')])
    keyboard.append([InlineKeyboardButton(text='–ú–µ—Å—Ç –∑–∞–Ω—è—Ç–æ', callback_data=f'admin.edepoc:{tour_id}.{departure_id}')])
    keyboard.append([InlineKeyboardButton(text='–ê–≤—Ç–æ–±—É—Å', callback_data=f'admin.edepbus:{tour_id}.{departure_id}')])
    keyboard.append([InlineKeyboardButton(text='‚ùå –£–¥–∞–ª–∏—Ç—å', callback_data=f'admin.deldep:{tour_id}.{departure_id}')])
    keyboard.append([InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data=f'admin.tour.{tour_id}')])
    markup = InlineKeyboardMarkup(inline_keyboard=keyboard)
    if data["seats"] is None:
        data["seats"] = 0
    if data["occupied_seats"] is None:
        data['occupied_seats'] = 0
    text = (f'–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç: {data["departure_time"]}\n–î–æ: {data["arrival_time"]}\n–ê–≤—Ç–æ–±—É—Å: {data["bus"]}\n–ó–∞–Ω—è—Ç–æ –º–µ—Å—Ç: {data["occupied_seats"]}\n–°–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç: {data["seats"] - data["occupied_seats"]}\n–í—Å–µ–≥–æ –º–µ—Å—Ç: {data["seats"]}')
    return text, markup


